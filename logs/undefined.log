{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:09:30.978Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running! ",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:09:31.156Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running! ",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:09:31.327Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running! ",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:09:32.047Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running! ",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:09:32.528Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running! ",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:09:40.530Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running! ",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:09:41.713Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running! ",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:09:43.931Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:09:44.845Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:10:23.037Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:13:06.001Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:13:08.339Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:13:17.866Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:13:21.187Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:15:21.468Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:17:11.677Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:17:12.741Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:17:33.760Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:17:34.666Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:17:35.292Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:17:35.799Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:17:36.044Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:18:26.620Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:18:27.352Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:18:27.980Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:18:55.271Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:18:56.093Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:10.645Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:11.364Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:11.781Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:11.977Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:12.132Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:12.316Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:12.496Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:13.291Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:41.323Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:41.964Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:42.641Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:42.795Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:42.934Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:19:54.809Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:20:13.127Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:20:14.525Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:20:15.063Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:20:16.373Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:20:16.568Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:20:16.755Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:20:48.049Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:20:48.944Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:23:02.060Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:23:02.878Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:23:03.524Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:23:04.254Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:17.046Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:19.778Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:20.586Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:21.429Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:22.091Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:22.311Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:22.499Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:22.675Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:22.851Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:23.014Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:23.874Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:24.274Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:35.671Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:50.552Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:54.150Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:24:55.026Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:25:22.403Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2024-08-26T08:25:25.325Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": null,
        "trace": {
            "error": "Error: Server is up running!\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:52:9\n    at Generator.next (<anonymous>)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:31:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:27:12)\n    at /Users/arunkumar/Downloads/rest-api-using-ts/src/index.ts:47:82\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/arunkumar/Downloads/rest-api-using-ts/node_modules/express/lib/router/layer.js:95:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:31:22.963Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:31:29.166Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": {
            "status": "running"
        }
    }
}
{
    "level": "INFO",
    "message": "CONTROLLER_RESPONSE",
    "timestamp": "2024-08-26T08:31:30.431Z",
    "meta": {
        "success": true,
        "statusCode": 200,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/server-status"
        },
        "message": "Server is up running!",
        "data": {
            "status": "running"
        }
    }
}
